/* * Page-specific scripts * * - handles first, previous, next and last controls * - adds back / forward keyboard navigation * - handles a start / stop slideshow button with 1s per photo * * This version uses an $images array and image numbers to find previous and next image * The slideshow is a little basic: for example it doesn't stop when the user selects another image * * @author Rogier van der Linde <rogier.vanderlinde@kahosl.be> */;(function($) {    'use strict';    // holds current image shown    var currNr = 0;    var $links, $images;    /**     * Function to show an image     */    var showImage = function(nr) {        // // bounds        // nr = (nr > ($links.length - 1)) ? 0 : ((nr < 0) ? $links.length - 1 : nr);        // find image        var $img = $images.eq(nr);        if (!$img) return;        // find big image        var $photoBig = $('#photoBig');        // change        $photoBig.attr('src', $img.data('src-l'));        $photoBig.attr('alt', $img.attr('alt'));        // remember current image number        currNr = nr;    };    /**     * Function to show the next image     */    var showNextImage = function() {        showImage(currNr + 1);    };    /**     * Function to show the previous image     */    var showPrevImage = function() {        showImage(currNr - 1);    };    // start scripts    $(document).ready(function() {        // find $images and $links        $links = $('#thumbsmenu li>a');        $images = $('#thumbsmenu li>a img');        // add link events        $links.on('click', function(e) {        	var nr = $links.index($(this));            showImage(nr);            e.preventDefault();        });        // controls        $('#lnkFirst').on('click', function(e) {            showImage(0);            e.preventDefault();        });        $('#lnkPrev').on('click', function(e) {            showPrevImage();            e.preventDefault();        });        $('#lnkNext').on('click', function(e) {            showNextImage();            e.preventDefault();        });        $('#lnkLast').on('click', function(e) {            showImage($images.length - 1);            e.preventDefault();        });        // keyboard        $(document).on('keydown', function(e) {            var code = (e.keyCode ? e.keyCode : e.which);            switch (code) {                case 37:                    showPrevImage();                    e.preventDefault();                    break;                case 39:                    showNextImage();                    e.preventDefault();                    break;            }        });        // play        var timer;        var $play = $('#btnPlay');        $play.on('click', function(e) {            if (!$play.prop('playing')) {                $play.val('stop');                $play.prop('playing', true);                currNr = 0;                timer = setInterval(showNextImage, 1000);            } else {                $play.val('start');                $play.prop('playing', false);                clearInterval(timer);            }        });    });})(jQuery);